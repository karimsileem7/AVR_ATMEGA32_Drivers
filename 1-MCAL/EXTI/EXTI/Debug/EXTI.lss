
EXTI.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000576  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000978  00000000  00000000  000005cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000445  00000000  00000000  00000f44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 8c 02 	jmp	0x518	; 0x518 <__vector_1>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 81 02 	call	0x502	; 0x502 <main>
  64:	0c 94 b9 02 	jmp	0x572	; 0x572 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <DIO_u8SetPinValue>:
#include "DIO_register.h"
#include "DIO_private.h"
#include "DIO_config.h"

u8 DIO_u8SetPinValue(u8 Copy_u8Port, u8 Copy_u8Pin, u8 Copy_u8Value)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	cd b7       	in	r28, 0x3d	; 61
  72:	de b7       	in	r29, 0x3e	; 62
  74:	28 97       	sbiw	r28, 0x08	; 8
  76:	0f b6       	in	r0, 0x3f	; 63
  78:	f8 94       	cli
  7a:	de bf       	out	0x3e, r29	; 62
  7c:	0f be       	out	0x3f, r0	; 63
  7e:	cd bf       	out	0x3d, r28	; 61
  80:	8a 83       	std	Y+2, r24	; 0x02
  82:	6b 83       	std	Y+3, r22	; 0x03
  84:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
  86:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8Pin<= DIO_u8PIN7)
  88:	8b 81       	ldd	r24, Y+3	; 0x03
  8a:	88 30       	cpi	r24, 0x08	; 8
  8c:	08 f0       	brcs	.+2      	; 0x90 <DIO_u8SetPinValue+0x24>
  8e:	f4 c0       	rjmp	.+488    	; 0x278 <DIO_u8SetPinValue+0x20c>
	{
		if(Copy_u8Value==DIO_u8PIN_LOW)
  90:	8c 81       	ldd	r24, Y+4	; 0x04
  92:	88 23       	and	r24, r24
  94:	09 f0       	breq	.+2      	; 0x98 <DIO_u8SetPinValue+0x2c>
  96:	77 c0       	rjmp	.+238    	; 0x186 <DIO_u8SetPinValue+0x11a>
		{
			switch(Copy_u8Port)
  98:	8a 81       	ldd	r24, Y+2	; 0x02
  9a:	28 2f       	mov	r18, r24
  9c:	30 e0       	ldi	r19, 0x00	; 0
  9e:	38 87       	std	Y+8, r19	; 0x08
  a0:	2f 83       	std	Y+7, r18	; 0x07
  a2:	8f 81       	ldd	r24, Y+7	; 0x07
  a4:	98 85       	ldd	r25, Y+8	; 0x08
  a6:	81 30       	cpi	r24, 0x01	; 1
  a8:	91 05       	cpc	r25, r1
  aa:	59 f1       	breq	.+86     	; 0x102 <DIO_u8SetPinValue+0x96>
  ac:	2f 81       	ldd	r18, Y+7	; 0x07
  ae:	38 85       	ldd	r19, Y+8	; 0x08
  b0:	22 30       	cpi	r18, 0x02	; 2
  b2:	31 05       	cpc	r19, r1
  b4:	2c f4       	brge	.+10     	; 0xc0 <DIO_u8SetPinValue+0x54>
  b6:	8f 81       	ldd	r24, Y+7	; 0x07
  b8:	98 85       	ldd	r25, Y+8	; 0x08
  ba:	00 97       	sbiw	r24, 0x00	; 0
  bc:	69 f0       	breq	.+26     	; 0xd8 <DIO_u8SetPinValue+0x6c>
  be:	60 c0       	rjmp	.+192    	; 0x180 <DIO_u8SetPinValue+0x114>
  c0:	2f 81       	ldd	r18, Y+7	; 0x07
  c2:	38 85       	ldd	r19, Y+8	; 0x08
  c4:	22 30       	cpi	r18, 0x02	; 2
  c6:	31 05       	cpc	r19, r1
  c8:	89 f1       	breq	.+98     	; 0x12c <DIO_u8SetPinValue+0xc0>
  ca:	8f 81       	ldd	r24, Y+7	; 0x07
  cc:	98 85       	ldd	r25, Y+8	; 0x08
  ce:	83 30       	cpi	r24, 0x03	; 3
  d0:	91 05       	cpc	r25, r1
  d2:	09 f4       	brne	.+2      	; 0xd6 <DIO_u8SetPinValue+0x6a>
  d4:	40 c0       	rjmp	.+128    	; 0x156 <DIO_u8SetPinValue+0xea>
  d6:	54 c0       	rjmp	.+168    	; 0x180 <DIO_u8SetPinValue+0x114>
			{
			case DIO_u8PORTA: CLR_BIT(PORTA,Copy_u8Pin); break;
  d8:	ab e3       	ldi	r26, 0x3B	; 59
  da:	b0 e0       	ldi	r27, 0x00	; 0
  dc:	eb e3       	ldi	r30, 0x3B	; 59
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	48 2f       	mov	r20, r24
  e4:	8b 81       	ldd	r24, Y+3	; 0x03
  e6:	28 2f       	mov	r18, r24
  e8:	30 e0       	ldi	r19, 0x00	; 0
  ea:	81 e0       	ldi	r24, 0x01	; 1
  ec:	90 e0       	ldi	r25, 0x00	; 0
  ee:	02 2e       	mov	r0, r18
  f0:	02 c0       	rjmp	.+4      	; 0xf6 <DIO_u8SetPinValue+0x8a>
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	0a 94       	dec	r0
  f8:	e2 f7       	brpl	.-8      	; 0xf2 <DIO_u8SetPinValue+0x86>
  fa:	80 95       	com	r24
  fc:	84 23       	and	r24, r20
  fe:	8c 93       	st	X, r24
 100:	bd c0       	rjmp	.+378    	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: CLR_BIT(PORTB,Copy_u8Pin); break;
 102:	a8 e3       	ldi	r26, 0x38	; 56
 104:	b0 e0       	ldi	r27, 0x00	; 0
 106:	e8 e3       	ldi	r30, 0x38	; 56
 108:	f0 e0       	ldi	r31, 0x00	; 0
 10a:	80 81       	ld	r24, Z
 10c:	48 2f       	mov	r20, r24
 10e:	8b 81       	ldd	r24, Y+3	; 0x03
 110:	28 2f       	mov	r18, r24
 112:	30 e0       	ldi	r19, 0x00	; 0
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	02 2e       	mov	r0, r18
 11a:	02 c0       	rjmp	.+4      	; 0x120 <DIO_u8SetPinValue+0xb4>
 11c:	88 0f       	add	r24, r24
 11e:	99 1f       	adc	r25, r25
 120:	0a 94       	dec	r0
 122:	e2 f7       	brpl	.-8      	; 0x11c <DIO_u8SetPinValue+0xb0>
 124:	80 95       	com	r24
 126:	84 23       	and	r24, r20
 128:	8c 93       	st	X, r24
 12a:	a8 c0       	rjmp	.+336    	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: CLR_BIT(PORTC,Copy_u8Pin); break;
 12c:	a5 e3       	ldi	r26, 0x35	; 53
 12e:	b0 e0       	ldi	r27, 0x00	; 0
 130:	e5 e3       	ldi	r30, 0x35	; 53
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	48 2f       	mov	r20, r24
 138:	8b 81       	ldd	r24, Y+3	; 0x03
 13a:	28 2f       	mov	r18, r24
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	81 e0       	ldi	r24, 0x01	; 1
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	02 2e       	mov	r0, r18
 144:	02 c0       	rjmp	.+4      	; 0x14a <DIO_u8SetPinValue+0xde>
 146:	88 0f       	add	r24, r24
 148:	99 1f       	adc	r25, r25
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <DIO_u8SetPinValue+0xda>
 14e:	80 95       	com	r24
 150:	84 23       	and	r24, r20
 152:	8c 93       	st	X, r24
 154:	93 c0       	rjmp	.+294    	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: CLR_BIT(PORTD,Copy_u8Pin); break;
 156:	a2 e3       	ldi	r26, 0x32	; 50
 158:	b0 e0       	ldi	r27, 0x00	; 0
 15a:	e2 e3       	ldi	r30, 0x32	; 50
 15c:	f0 e0       	ldi	r31, 0x00	; 0
 15e:	80 81       	ld	r24, Z
 160:	48 2f       	mov	r20, r24
 162:	8b 81       	ldd	r24, Y+3	; 0x03
 164:	28 2f       	mov	r18, r24
 166:	30 e0       	ldi	r19, 0x00	; 0
 168:	81 e0       	ldi	r24, 0x01	; 1
 16a:	90 e0       	ldi	r25, 0x00	; 0
 16c:	02 2e       	mov	r0, r18
 16e:	02 c0       	rjmp	.+4      	; 0x174 <DIO_u8SetPinValue+0x108>
 170:	88 0f       	add	r24, r24
 172:	99 1f       	adc	r25, r25
 174:	0a 94       	dec	r0
 176:	e2 f7       	brpl	.-8      	; 0x170 <DIO_u8SetPinValue+0x104>
 178:	80 95       	com	r24
 17a:	84 23       	and	r24, r20
 17c:	8c 93       	st	X, r24
 17e:	7e c0       	rjmp	.+252    	; 0x27c <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1; break;
 180:	81 e0       	ldi	r24, 0x01	; 1
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	7b c0       	rjmp	.+246    	; 0x27c <DIO_u8SetPinValue+0x210>
			}
		}
		else if (Copy_u8Value==DIO_u8PIN_HIGH)
 186:	8c 81       	ldd	r24, Y+4	; 0x04
 188:	81 30       	cpi	r24, 0x01	; 1
 18a:	09 f0       	breq	.+2      	; 0x18e <DIO_u8SetPinValue+0x122>
 18c:	72 c0       	rjmp	.+228    	; 0x272 <DIO_u8SetPinValue+0x206>
		{
			switch(Copy_u8Port)
 18e:	8a 81       	ldd	r24, Y+2	; 0x02
 190:	28 2f       	mov	r18, r24
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	3e 83       	std	Y+6, r19	; 0x06
 196:	2d 83       	std	Y+5, r18	; 0x05
 198:	8d 81       	ldd	r24, Y+5	; 0x05
 19a:	9e 81       	ldd	r25, Y+6	; 0x06
 19c:	81 30       	cpi	r24, 0x01	; 1
 19e:	91 05       	cpc	r25, r1
 1a0:	49 f1       	breq	.+82     	; 0x1f4 <DIO_u8SetPinValue+0x188>
 1a2:	2d 81       	ldd	r18, Y+5	; 0x05
 1a4:	3e 81       	ldd	r19, Y+6	; 0x06
 1a6:	22 30       	cpi	r18, 0x02	; 2
 1a8:	31 05       	cpc	r19, r1
 1aa:	2c f4       	brge	.+10     	; 0x1b6 <DIO_u8SetPinValue+0x14a>
 1ac:	8d 81       	ldd	r24, Y+5	; 0x05
 1ae:	9e 81       	ldd	r25, Y+6	; 0x06
 1b0:	00 97       	sbiw	r24, 0x00	; 0
 1b2:	61 f0       	breq	.+24     	; 0x1cc <DIO_u8SetPinValue+0x160>
 1b4:	5b c0       	rjmp	.+182    	; 0x26c <DIO_u8SetPinValue+0x200>
 1b6:	2d 81       	ldd	r18, Y+5	; 0x05
 1b8:	3e 81       	ldd	r19, Y+6	; 0x06
 1ba:	22 30       	cpi	r18, 0x02	; 2
 1bc:	31 05       	cpc	r19, r1
 1be:	71 f1       	breq	.+92     	; 0x21c <DIO_u8SetPinValue+0x1b0>
 1c0:	8d 81       	ldd	r24, Y+5	; 0x05
 1c2:	9e 81       	ldd	r25, Y+6	; 0x06
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	91 05       	cpc	r25, r1
 1c8:	e9 f1       	breq	.+122    	; 0x244 <DIO_u8SetPinValue+0x1d8>
 1ca:	50 c0       	rjmp	.+160    	; 0x26c <DIO_u8SetPinValue+0x200>
			{
			case DIO_u8PORTA: SET_BIT(PORTA,Copy_u8Pin); break;
 1cc:	ab e3       	ldi	r26, 0x3B	; 59
 1ce:	b0 e0       	ldi	r27, 0x00	; 0
 1d0:	eb e3       	ldi	r30, 0x3B	; 59
 1d2:	f0 e0       	ldi	r31, 0x00	; 0
 1d4:	80 81       	ld	r24, Z
 1d6:	48 2f       	mov	r20, r24
 1d8:	8b 81       	ldd	r24, Y+3	; 0x03
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	81 e0       	ldi	r24, 0x01	; 1
 1e0:	90 e0       	ldi	r25, 0x00	; 0
 1e2:	02 2e       	mov	r0, r18
 1e4:	02 c0       	rjmp	.+4      	; 0x1ea <DIO_u8SetPinValue+0x17e>
 1e6:	88 0f       	add	r24, r24
 1e8:	99 1f       	adc	r25, r25
 1ea:	0a 94       	dec	r0
 1ec:	e2 f7       	brpl	.-8      	; 0x1e6 <DIO_u8SetPinValue+0x17a>
 1ee:	84 2b       	or	r24, r20
 1f0:	8c 93       	st	X, r24
 1f2:	44 c0       	rjmp	.+136    	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTB: SET_BIT(PORTB,Copy_u8Pin); break;
 1f4:	a8 e3       	ldi	r26, 0x38	; 56
 1f6:	b0 e0       	ldi	r27, 0x00	; 0
 1f8:	e8 e3       	ldi	r30, 0x38	; 56
 1fa:	f0 e0       	ldi	r31, 0x00	; 0
 1fc:	80 81       	ld	r24, Z
 1fe:	48 2f       	mov	r20, r24
 200:	8b 81       	ldd	r24, Y+3	; 0x03
 202:	28 2f       	mov	r18, r24
 204:	30 e0       	ldi	r19, 0x00	; 0
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	02 2e       	mov	r0, r18
 20c:	02 c0       	rjmp	.+4      	; 0x212 <DIO_u8SetPinValue+0x1a6>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <DIO_u8SetPinValue+0x1a2>
 216:	84 2b       	or	r24, r20
 218:	8c 93       	st	X, r24
 21a:	30 c0       	rjmp	.+96     	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTC: SET_BIT(PORTC,Copy_u8Pin); break;
 21c:	a5 e3       	ldi	r26, 0x35	; 53
 21e:	b0 e0       	ldi	r27, 0x00	; 0
 220:	e5 e3       	ldi	r30, 0x35	; 53
 222:	f0 e0       	ldi	r31, 0x00	; 0
 224:	80 81       	ld	r24, Z
 226:	48 2f       	mov	r20, r24
 228:	8b 81       	ldd	r24, Y+3	; 0x03
 22a:	28 2f       	mov	r18, r24
 22c:	30 e0       	ldi	r19, 0x00	; 0
 22e:	81 e0       	ldi	r24, 0x01	; 1
 230:	90 e0       	ldi	r25, 0x00	; 0
 232:	02 2e       	mov	r0, r18
 234:	02 c0       	rjmp	.+4      	; 0x23a <DIO_u8SetPinValue+0x1ce>
 236:	88 0f       	add	r24, r24
 238:	99 1f       	adc	r25, r25
 23a:	0a 94       	dec	r0
 23c:	e2 f7       	brpl	.-8      	; 0x236 <DIO_u8SetPinValue+0x1ca>
 23e:	84 2b       	or	r24, r20
 240:	8c 93       	st	X, r24
 242:	1c c0       	rjmp	.+56     	; 0x27c <DIO_u8SetPinValue+0x210>
			case DIO_u8PORTD: SET_BIT(PORTD,Copy_u8Pin); break;
 244:	a2 e3       	ldi	r26, 0x32	; 50
 246:	b0 e0       	ldi	r27, 0x00	; 0
 248:	e2 e3       	ldi	r30, 0x32	; 50
 24a:	f0 e0       	ldi	r31, 0x00	; 0
 24c:	80 81       	ld	r24, Z
 24e:	48 2f       	mov	r20, r24
 250:	8b 81       	ldd	r24, Y+3	; 0x03
 252:	28 2f       	mov	r18, r24
 254:	30 e0       	ldi	r19, 0x00	; 0
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	02 2e       	mov	r0, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <DIO_u8SetPinValue+0x1f6>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	0a 94       	dec	r0
 264:	e2 f7       	brpl	.-8      	; 0x25e <DIO_u8SetPinValue+0x1f2>
 266:	84 2b       	or	r24, r20
 268:	8c 93       	st	X, r24
 26a:	08 c0       	rjmp	.+16     	; 0x27c <DIO_u8SetPinValue+0x210>
			default: Local_u8ErrorState=1; break;
 26c:	81 e0       	ldi	r24, 0x01	; 1
 26e:	89 83       	std	Y+1, r24	; 0x01
 270:	05 c0       	rjmp	.+10     	; 0x27c <DIO_u8SetPinValue+0x210>
			}
		}
		else
		{
			Local_u8ErrorState=1;
 272:	81 e0       	ldi	r24, 0x01	; 1
 274:	89 83       	std	Y+1, r24	; 0x01
 276:	02 c0       	rjmp	.+4      	; 0x27c <DIO_u8SetPinValue+0x210>
		}
	}
	else
	{
		Local_u8ErrorState=1;
 278:	81 e0       	ldi	r24, 0x01	; 1
 27a:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
 27c:	89 81       	ldd	r24, Y+1	; 0x01
}
 27e:	28 96       	adiw	r28, 0x08	; 8
 280:	0f b6       	in	r0, 0x3f	; 63
 282:	f8 94       	cli
 284:	de bf       	out	0x3e, r29	; 62
 286:	0f be       	out	0x3f, r0	; 63
 288:	cd bf       	out	0x3d, r28	; 61
 28a:	cf 91       	pop	r28
 28c:	df 91       	pop	r29
 28e:	08 95       	ret

00000290 <DIO_u8SetPortValue>:

u8 DIO_u8SetPortValue(u8 Copy_u8Port, u8 Copy_u8Value)
{
 290:	df 93       	push	r29
 292:	cf 93       	push	r28
 294:	00 d0       	rcall	.+0      	; 0x296 <DIO_u8SetPortValue+0x6>
 296:	00 d0       	rcall	.+0      	; 0x298 <DIO_u8SetPortValue+0x8>
 298:	0f 92       	push	r0
 29a:	cd b7       	in	r28, 0x3d	; 61
 29c:	de b7       	in	r29, 0x3e	; 62
 29e:	8a 83       	std	Y+2, r24	; 0x02
 2a0:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState=0;
 2a2:	19 82       	std	Y+1, r1	; 0x01

	switch(Copy_u8Port)
 2a4:	8a 81       	ldd	r24, Y+2	; 0x02
 2a6:	28 2f       	mov	r18, r24
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	3d 83       	std	Y+5, r19	; 0x05
 2ac:	2c 83       	std	Y+4, r18	; 0x04
 2ae:	8c 81       	ldd	r24, Y+4	; 0x04
 2b0:	9d 81       	ldd	r25, Y+5	; 0x05
 2b2:	81 30       	cpi	r24, 0x01	; 1
 2b4:	91 05       	cpc	r25, r1
 2b6:	d1 f0       	breq	.+52     	; 0x2ec <DIO_u8SetPortValue+0x5c>
 2b8:	2c 81       	ldd	r18, Y+4	; 0x04
 2ba:	3d 81       	ldd	r19, Y+5	; 0x05
 2bc:	22 30       	cpi	r18, 0x02	; 2
 2be:	31 05       	cpc	r19, r1
 2c0:	2c f4       	brge	.+10     	; 0x2cc <DIO_u8SetPortValue+0x3c>
 2c2:	8c 81       	ldd	r24, Y+4	; 0x04
 2c4:	9d 81       	ldd	r25, Y+5	; 0x05
 2c6:	00 97       	sbiw	r24, 0x00	; 0
 2c8:	61 f0       	breq	.+24     	; 0x2e2 <DIO_u8SetPortValue+0x52>
 2ca:	1f c0       	rjmp	.+62     	; 0x30a <DIO_u8SetPortValue+0x7a>
 2cc:	2c 81       	ldd	r18, Y+4	; 0x04
 2ce:	3d 81       	ldd	r19, Y+5	; 0x05
 2d0:	22 30       	cpi	r18, 0x02	; 2
 2d2:	31 05       	cpc	r19, r1
 2d4:	81 f0       	breq	.+32     	; 0x2f6 <DIO_u8SetPortValue+0x66>
 2d6:	8c 81       	ldd	r24, Y+4	; 0x04
 2d8:	9d 81       	ldd	r25, Y+5	; 0x05
 2da:	83 30       	cpi	r24, 0x03	; 3
 2dc:	91 05       	cpc	r25, r1
 2de:	81 f0       	breq	.+32     	; 0x300 <DIO_u8SetPortValue+0x70>
 2e0:	14 c0       	rjmp	.+40     	; 0x30a <DIO_u8SetPortValue+0x7a>
	{
	case DIO_u8PORTA : PORTA = Copy_u8Value; break;
 2e2:	eb e3       	ldi	r30, 0x3B	; 59
 2e4:	f0 e0       	ldi	r31, 0x00	; 0
 2e6:	8b 81       	ldd	r24, Y+3	; 0x03
 2e8:	80 83       	st	Z, r24
 2ea:	11 c0       	rjmp	.+34     	; 0x30e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTB : PORTB = Copy_u8Value; break;
 2ec:	e8 e3       	ldi	r30, 0x38	; 56
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	8b 81       	ldd	r24, Y+3	; 0x03
 2f2:	80 83       	st	Z, r24
 2f4:	0c c0       	rjmp	.+24     	; 0x30e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTC : PORTC = Copy_u8Value; break;
 2f6:	e5 e3       	ldi	r30, 0x35	; 53
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	8b 81       	ldd	r24, Y+3	; 0x03
 2fc:	80 83       	st	Z, r24
 2fe:	07 c0       	rjmp	.+14     	; 0x30e <DIO_u8SetPortValue+0x7e>
	case DIO_u8PORTD : PORTD = Copy_u8Value; break;
 300:	e2 e3       	ldi	r30, 0x32	; 50
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	8b 81       	ldd	r24, Y+3	; 0x03
 306:	80 83       	st	Z, r24
 308:	02 c0       	rjmp	.+4      	; 0x30e <DIO_u8SetPortValue+0x7e>
	default: Local_u8ErrorState=1;
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_u8ErrorState;
 30e:	89 81       	ldd	r24, Y+1	; 0x01
}
 310:	0f 90       	pop	r0
 312:	0f 90       	pop	r0
 314:	0f 90       	pop	r0
 316:	0f 90       	pop	r0
 318:	0f 90       	pop	r0
 31a:	cf 91       	pop	r28
 31c:	df 91       	pop	r29
 31e:	08 95       	ret

00000320 <DIO_u8GetPinValue>:

u8 DIO_u8GetPinValue(u8 Copy_u8Port,u8 Copy_u8Pin, u8* Copy_pu8Value)
{
 320:	df 93       	push	r29
 322:	cf 93       	push	r28
 324:	cd b7       	in	r28, 0x3d	; 61
 326:	de b7       	in	r29, 0x3e	; 62
 328:	27 97       	sbiw	r28, 0x07	; 7
 32a:	0f b6       	in	r0, 0x3f	; 63
 32c:	f8 94       	cli
 32e:	de bf       	out	0x3e, r29	; 62
 330:	0f be       	out	0x3f, r0	; 63
 332:	cd bf       	out	0x3d, r28	; 61
 334:	8a 83       	std	Y+2, r24	; 0x02
 336:	6b 83       	std	Y+3, r22	; 0x03
 338:	5d 83       	std	Y+5, r21	; 0x05
 33a:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState=0;
 33c:	19 82       	std	Y+1, r1	; 0x01

	if((Copy_pu8Value!=NULL) && (Copy_u8Pin<= DIO_u8PIN7))
 33e:	8c 81       	ldd	r24, Y+4	; 0x04
 340:	9d 81       	ldd	r25, Y+5	; 0x05
 342:	00 97       	sbiw	r24, 0x00	; 0
 344:	09 f4       	brne	.+2      	; 0x348 <DIO_u8GetPinValue+0x28>
 346:	78 c0       	rjmp	.+240    	; 0x438 <DIO_u8GetPinValue+0x118>
 348:	8b 81       	ldd	r24, Y+3	; 0x03
 34a:	88 30       	cpi	r24, 0x08	; 8
 34c:	08 f0       	brcs	.+2      	; 0x350 <DIO_u8GetPinValue+0x30>
 34e:	74 c0       	rjmp	.+232    	; 0x438 <DIO_u8GetPinValue+0x118>
	{
		switch(Copy_u8Port)
 350:	8a 81       	ldd	r24, Y+2	; 0x02
 352:	28 2f       	mov	r18, r24
 354:	30 e0       	ldi	r19, 0x00	; 0
 356:	3f 83       	std	Y+7, r19	; 0x07
 358:	2e 83       	std	Y+6, r18	; 0x06
 35a:	4e 81       	ldd	r20, Y+6	; 0x06
 35c:	5f 81       	ldd	r21, Y+7	; 0x07
 35e:	41 30       	cpi	r20, 0x01	; 1
 360:	51 05       	cpc	r21, r1
 362:	59 f1       	breq	.+86     	; 0x3ba <DIO_u8GetPinValue+0x9a>
 364:	8e 81       	ldd	r24, Y+6	; 0x06
 366:	9f 81       	ldd	r25, Y+7	; 0x07
 368:	82 30       	cpi	r24, 0x02	; 2
 36a:	91 05       	cpc	r25, r1
 36c:	34 f4       	brge	.+12     	; 0x37a <DIO_u8GetPinValue+0x5a>
 36e:	2e 81       	ldd	r18, Y+6	; 0x06
 370:	3f 81       	ldd	r19, Y+7	; 0x07
 372:	21 15       	cp	r18, r1
 374:	31 05       	cpc	r19, r1
 376:	69 f0       	breq	.+26     	; 0x392 <DIO_u8GetPinValue+0x72>
 378:	5c c0       	rjmp	.+184    	; 0x432 <DIO_u8GetPinValue+0x112>
 37a:	4e 81       	ldd	r20, Y+6	; 0x06
 37c:	5f 81       	ldd	r21, Y+7	; 0x07
 37e:	42 30       	cpi	r20, 0x02	; 2
 380:	51 05       	cpc	r21, r1
 382:	79 f1       	breq	.+94     	; 0x3e2 <DIO_u8GetPinValue+0xc2>
 384:	8e 81       	ldd	r24, Y+6	; 0x06
 386:	9f 81       	ldd	r25, Y+7	; 0x07
 388:	83 30       	cpi	r24, 0x03	; 3
 38a:	91 05       	cpc	r25, r1
 38c:	09 f4       	brne	.+2      	; 0x390 <DIO_u8GetPinValue+0x70>
 38e:	3d c0       	rjmp	.+122    	; 0x40a <DIO_u8GetPinValue+0xea>
 390:	50 c0       	rjmp	.+160    	; 0x432 <DIO_u8GetPinValue+0x112>
		{
		case DIO_u8PORTA : *Copy_pu8Value= GET_BIT(PINA , Copy_u8Pin); break;
 392:	e9 e3       	ldi	r30, 0x39	; 57
 394:	f0 e0       	ldi	r31, 0x00	; 0
 396:	80 81       	ld	r24, Z
 398:	28 2f       	mov	r18, r24
 39a:	30 e0       	ldi	r19, 0x00	; 0
 39c:	8b 81       	ldd	r24, Y+3	; 0x03
 39e:	88 2f       	mov	r24, r24
 3a0:	90 e0       	ldi	r25, 0x00	; 0
 3a2:	a9 01       	movw	r20, r18
 3a4:	02 c0       	rjmp	.+4      	; 0x3aa <DIO_u8GetPinValue+0x8a>
 3a6:	55 95       	asr	r21
 3a8:	47 95       	ror	r20
 3aa:	8a 95       	dec	r24
 3ac:	e2 f7       	brpl	.-8      	; 0x3a6 <DIO_u8GetPinValue+0x86>
 3ae:	ca 01       	movw	r24, r20
 3b0:	81 70       	andi	r24, 0x01	; 1
 3b2:	ec 81       	ldd	r30, Y+4	; 0x04
 3b4:	fd 81       	ldd	r31, Y+5	; 0x05
 3b6:	80 83       	st	Z, r24
 3b8:	41 c0       	rjmp	.+130    	; 0x43c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTB : *Copy_pu8Value= GET_BIT(PINB , Copy_u8Pin); break;
 3ba:	e6 e3       	ldi	r30, 0x36	; 54
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	28 2f       	mov	r18, r24
 3c2:	30 e0       	ldi	r19, 0x00	; 0
 3c4:	8b 81       	ldd	r24, Y+3	; 0x03
 3c6:	88 2f       	mov	r24, r24
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	a9 01       	movw	r20, r18
 3cc:	02 c0       	rjmp	.+4      	; 0x3d2 <DIO_u8GetPinValue+0xb2>
 3ce:	55 95       	asr	r21
 3d0:	47 95       	ror	r20
 3d2:	8a 95       	dec	r24
 3d4:	e2 f7       	brpl	.-8      	; 0x3ce <DIO_u8GetPinValue+0xae>
 3d6:	ca 01       	movw	r24, r20
 3d8:	81 70       	andi	r24, 0x01	; 1
 3da:	ec 81       	ldd	r30, Y+4	; 0x04
 3dc:	fd 81       	ldd	r31, Y+5	; 0x05
 3de:	80 83       	st	Z, r24
 3e0:	2d c0       	rjmp	.+90     	; 0x43c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTC : *Copy_pu8Value= GET_BIT(PINC , Copy_u8Pin); break;
 3e2:	e3 e3       	ldi	r30, 0x33	; 51
 3e4:	f0 e0       	ldi	r31, 0x00	; 0
 3e6:	80 81       	ld	r24, Z
 3e8:	28 2f       	mov	r18, r24
 3ea:	30 e0       	ldi	r19, 0x00	; 0
 3ec:	8b 81       	ldd	r24, Y+3	; 0x03
 3ee:	88 2f       	mov	r24, r24
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	a9 01       	movw	r20, r18
 3f4:	02 c0       	rjmp	.+4      	; 0x3fa <DIO_u8GetPinValue+0xda>
 3f6:	55 95       	asr	r21
 3f8:	47 95       	ror	r20
 3fa:	8a 95       	dec	r24
 3fc:	e2 f7       	brpl	.-8      	; 0x3f6 <DIO_u8GetPinValue+0xd6>
 3fe:	ca 01       	movw	r24, r20
 400:	81 70       	andi	r24, 0x01	; 1
 402:	ec 81       	ldd	r30, Y+4	; 0x04
 404:	fd 81       	ldd	r31, Y+5	; 0x05
 406:	80 83       	st	Z, r24
 408:	19 c0       	rjmp	.+50     	; 0x43c <DIO_u8GetPinValue+0x11c>
		case DIO_u8PORTD : *Copy_pu8Value= GET_BIT(PIND , Copy_u8Pin); break;
 40a:	e0 e3       	ldi	r30, 0x30	; 48
 40c:	f0 e0       	ldi	r31, 0x00	; 0
 40e:	80 81       	ld	r24, Z
 410:	28 2f       	mov	r18, r24
 412:	30 e0       	ldi	r19, 0x00	; 0
 414:	8b 81       	ldd	r24, Y+3	; 0x03
 416:	88 2f       	mov	r24, r24
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	a9 01       	movw	r20, r18
 41c:	02 c0       	rjmp	.+4      	; 0x422 <DIO_u8GetPinValue+0x102>
 41e:	55 95       	asr	r21
 420:	47 95       	ror	r20
 422:	8a 95       	dec	r24
 424:	e2 f7       	brpl	.-8      	; 0x41e <DIO_u8GetPinValue+0xfe>
 426:	ca 01       	movw	r24, r20
 428:	81 70       	andi	r24, 0x01	; 1
 42a:	ec 81       	ldd	r30, Y+4	; 0x04
 42c:	fd 81       	ldd	r31, Y+5	; 0x05
 42e:	80 83       	st	Z, r24
 430:	05 c0       	rjmp	.+10     	; 0x43c <DIO_u8GetPinValue+0x11c>
		default: Local_u8ErrorState=1;
 432:	81 e0       	ldi	r24, 0x01	; 1
 434:	89 83       	std	Y+1, r24	; 0x01
 436:	02 c0       	rjmp	.+4      	; 0x43c <DIO_u8GetPinValue+0x11c>
		}
	}
	else
	{
		Local_u8ErrorState=1;
 438:	81 e0       	ldi	r24, 0x01	; 1
 43a:	89 83       	std	Y+1, r24	; 0x01
	}
	return Local_u8ErrorState;
 43c:	89 81       	ldd	r24, Y+1	; 0x01
}
 43e:	27 96       	adiw	r28, 0x07	; 7
 440:	0f b6       	in	r0, 0x3f	; 63
 442:	f8 94       	cli
 444:	de bf       	out	0x3e, r29	; 62
 446:	0f be       	out	0x3f, r0	; 63
 448:	cd bf       	out	0x3d, r28	; 61
 44a:	cf 91       	pop	r28
 44c:	df 91       	pop	r29
 44e:	08 95       	ret

00000450 <EXTI_voidInt0Init>:
#include "EXTI_private.h"
#include "EXTI_register.h"
#include "EXTI_config.h"

void EXTI_voidInt0Init(void)
{
 450:	df 93       	push	r29
 452:	cf 93       	push	r28
 454:	cd b7       	in	r28, 0x3d	; 61
 456:	de b7       	in	r29, 0x3e	; 62
	/*Set sense control for INT0 to falling edge*/
	SET_BIT(MCUCR,MCUCR_ISC01);
 458:	a5 e5       	ldi	r26, 0x55	; 85
 45a:	b0 e0       	ldi	r27, 0x00	; 0
 45c:	e5 e5       	ldi	r30, 0x55	; 85
 45e:	f0 e0       	ldi	r31, 0x00	; 0
 460:	80 81       	ld	r24, Z
 462:	82 60       	ori	r24, 0x02	; 2
 464:	8c 93       	st	X, r24
	CLR_BIT(MCUCR,MCUCR_ISC00);
 466:	a5 e5       	ldi	r26, 0x55	; 85
 468:	b0 e0       	ldi	r27, 0x00	; 0
 46a:	e5 e5       	ldi	r30, 0x55	; 85
 46c:	f0 e0       	ldi	r31, 0x00	; 0
 46e:	80 81       	ld	r24, Z
 470:	8e 7f       	andi	r24, 0xFE	; 254
 472:	8c 93       	st	X, r24

	/*Peripheral interrupt enable for INT0*/
	SET_BIT(GICR,GICR_INT0);
 474:	ab e5       	ldi	r26, 0x5B	; 91
 476:	b0 e0       	ldi	r27, 0x00	; 0
 478:	eb e5       	ldi	r30, 0x5B	; 91
 47a:	f0 e0       	ldi	r31, 0x00	; 0
 47c:	80 81       	ld	r24, Z
 47e:	80 64       	ori	r24, 0x40	; 64
 480:	8c 93       	st	X, r24
}
 482:	cf 91       	pop	r28
 484:	df 91       	pop	r29
 486:	08 95       	ret

00000488 <GIE_voidEnable>:

#include "GIE_interface.h"
#include "GIE_register.h"

void GIE_voidEnable(void)
{
 488:	df 93       	push	r29
 48a:	cf 93       	push	r28
 48c:	cd b7       	in	r28, 0x3d	; 61
 48e:	de b7       	in	r29, 0x3e	; 62
	SET_BIT(SREG,SREG_I);
 490:	af e5       	ldi	r26, 0x5F	; 95
 492:	b0 e0       	ldi	r27, 0x00	; 0
 494:	ef e5       	ldi	r30, 0x5F	; 95
 496:	f0 e0       	ldi	r31, 0x00	; 0
 498:	80 81       	ld	r24, Z
 49a:	80 68       	ori	r24, 0x80	; 128
 49c:	8c 93       	st	X, r24
}
 49e:	cf 91       	pop	r28
 4a0:	df 91       	pop	r29
 4a2:	08 95       	ret

000004a4 <GIE_voidDisable>:
void GIE_voidDisable(void)
{
 4a4:	df 93       	push	r29
 4a6:	cf 93       	push	r28
 4a8:	cd b7       	in	r28, 0x3d	; 61
 4aa:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(SREG,SREG_I);
 4ac:	af e5       	ldi	r26, 0x5F	; 95
 4ae:	b0 e0       	ldi	r27, 0x00	; 0
 4b0:	ef e5       	ldi	r30, 0x5F	; 95
 4b2:	f0 e0       	ldi	r31, 0x00	; 0
 4b4:	80 81       	ld	r24, Z
 4b6:	8f 77       	andi	r24, 0x7F	; 127
 4b8:	8c 93       	st	X, r24
 4ba:	cf 91       	pop	r28
 4bc:	df 91       	pop	r29
 4be:	08 95       	ret

000004c0 <PORT_voidInit>:
#include "PORT_private.h"
#include "PORT_interface.h"
#include "PORT_register.h"

void PORT_voidInit(void)
{
 4c0:	df 93       	push	r29
 4c2:	cf 93       	push	r28
 4c4:	cd b7       	in	r28, 0x3d	; 61
 4c6:	de b7       	in	r29, 0x3e	; 62
	DDRA=PORTA_DIR;
 4c8:	ea e3       	ldi	r30, 0x3A	; 58
 4ca:	f0 e0       	ldi	r31, 0x00	; 0
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	80 83       	st	Z, r24
	DDRB=PORTB_DIR;
 4d0:	e7 e3       	ldi	r30, 0x37	; 55
 4d2:	f0 e0       	ldi	r31, 0x00	; 0
 4d4:	10 82       	st	Z, r1
	DDRC=PORTC_DIR;
 4d6:	e4 e3       	ldi	r30, 0x34	; 52
 4d8:	f0 e0       	ldi	r31, 0x00	; 0
 4da:	10 82       	st	Z, r1
	DDRD=PORTD_DIR;
 4dc:	e1 e3       	ldi	r30, 0x31	; 49
 4de:	f0 e0       	ldi	r31, 0x00	; 0
 4e0:	10 82       	st	Z, r1
	
	PORTA=PORTA_INITIAL_VALUE;
 4e2:	eb e3       	ldi	r30, 0x3B	; 59
 4e4:	f0 e0       	ldi	r31, 0x00	; 0
 4e6:	10 82       	st	Z, r1
	PORTB=PORTB_INITIAL_VALUE;
 4e8:	e8 e3       	ldi	r30, 0x38	; 56
 4ea:	f0 e0       	ldi	r31, 0x00	; 0
 4ec:	10 82       	st	Z, r1
	PORTC=PORTC_INITIAL_VALUE;
 4ee:	e5 e3       	ldi	r30, 0x35	; 53
 4f0:	f0 e0       	ldi	r31, 0x00	; 0
 4f2:	10 82       	st	Z, r1
	PORTD=PORTD_INITIAL_VALUE;
 4f4:	e2 e3       	ldi	r30, 0x32	; 50
 4f6:	f0 e0       	ldi	r31, 0x00	; 0
 4f8:	84 e0       	ldi	r24, 0x04	; 4
 4fa:	80 83       	st	Z, r24
 4fc:	cf 91       	pop	r28
 4fe:	df 91       	pop	r29
 500:	08 95       	ret

00000502 <main>:
#include "EXTI_interface.h"
#include "GIE_interface.h"


void main(void)
{
 502:	df 93       	push	r29
 504:	cf 93       	push	r28
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
	PORT_voidInit();
 50a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <PORT_voidInit>

	EXTI_voidInt0Init();
 50e:	0e 94 28 02 	call	0x450	; 0x450 <EXTI_voidInt0Init>
	GIE_voidEnable();
 512:	0e 94 44 02 	call	0x488	; 0x488 <GIE_voidEnable>
 516:	ff cf       	rjmp	.-2      	; 0x516 <main+0x14>

00000518 <__vector_1>:
	}
}

void __vector_1 (void)  __attribute__((signal));
void __vector_1 (void)
{
 518:	1f 92       	push	r1
 51a:	0f 92       	push	r0
 51c:	0f b6       	in	r0, 0x3f	; 63
 51e:	0f 92       	push	r0
 520:	11 24       	eor	r1, r1
 522:	2f 93       	push	r18
 524:	3f 93       	push	r19
 526:	4f 93       	push	r20
 528:	5f 93       	push	r21
 52a:	6f 93       	push	r22
 52c:	7f 93       	push	r23
 52e:	8f 93       	push	r24
 530:	9f 93       	push	r25
 532:	af 93       	push	r26
 534:	bf 93       	push	r27
 536:	ef 93       	push	r30
 538:	ff 93       	push	r31
 53a:	df 93       	push	r29
 53c:	cf 93       	push	r28
 53e:	cd b7       	in	r28, 0x3d	; 61
 540:	de b7       	in	r29, 0x3e	; 62
	DIO_u8SetPinValue(DIO_u8PORTA,DIO_u8PIN0,DIO_u8PIN_HIGH);
 542:	80 e0       	ldi	r24, 0x00	; 0
 544:	60 e0       	ldi	r22, 0x00	; 0
 546:	41 e0       	ldi	r20, 0x01	; 1
 548:	0e 94 36 00 	call	0x6c	; 0x6c <DIO_u8SetPinValue>
}
 54c:	cf 91       	pop	r28
 54e:	df 91       	pop	r29
 550:	ff 91       	pop	r31
 552:	ef 91       	pop	r30
 554:	bf 91       	pop	r27
 556:	af 91       	pop	r26
 558:	9f 91       	pop	r25
 55a:	8f 91       	pop	r24
 55c:	7f 91       	pop	r23
 55e:	6f 91       	pop	r22
 560:	5f 91       	pop	r21
 562:	4f 91       	pop	r20
 564:	3f 91       	pop	r19
 566:	2f 91       	pop	r18
 568:	0f 90       	pop	r0
 56a:	0f be       	out	0x3f, r0	; 63
 56c:	0f 90       	pop	r0
 56e:	1f 90       	pop	r1
 570:	18 95       	reti

00000572 <_exit>:
 572:	f8 94       	cli

00000574 <__stop_program>:
 574:	ff cf       	rjmp	.-2      	; 0x574 <__stop_program>
